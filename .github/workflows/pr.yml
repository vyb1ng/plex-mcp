name: Pull Request Tests

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  pr-checks:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests with coverage
      run: npm test -- --coverage --coverageReporters=json-summary

    - name: Check test coverage
      run: |
        COVERAGE=$(node -p "require('./coverage/coverage-summary.json').total.lines.pct")
        echo "Test coverage: ${COVERAGE}%"
        if (( $(echo "$COVERAGE < 80" | bc -l) )); then
          echo "❌ Test coverage is below 80%"
        #TODO: uncomment me! 
          # exit 1
        else
          echo "✅ Test coverage is above 80%"
        fi

    - name: Lint code
      run: npm run lint --if-present

    - name: Check for TypeScript errors
      run: npm run type-check --if-present

    - name: Validate package.json
      run: npm run validate --if-present

    - name: Check for security vulnerabilities
      run: npm audit --audit-level=high

    - name: Check dependencies for updates
      run: npx npm-check-updates --errorLevel 2

  integration-test:
    runs-on: ubuntu-latest
    if: github.event.pull_request.base.ref == 'main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run integration tests
      run: npm run test:integration --if-present
      env:
        PLEX_URL: ${{ secrets.TEST_PLEX_URL }}
        PLEX_TOKEN: ${{ secrets.TEST_PLEX_TOKEN }}

  size-check:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 18.x
      uses: actions/setup-node@v4
      with:
        node-version: 18.x
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Check bundle size
      run: |
        SIZE=$(du -sk node_modules | cut -f1)
        echo "Dependencies size: ${SIZE}KB"
        if [ $SIZE -gt 50000 ]; then
          echo "⚠️  Dependencies are quite large (>50MB)"
        fi

    - name: Check for large files
      run: |
        find . -name "*.js" -size +100k -not -path "./node_modules/*" -not -path "./coverage/*" | while read file; do
          echo "⚠️  Large file detected: $file"
        done
